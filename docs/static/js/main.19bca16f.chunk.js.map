{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAGRC,mBAAS,IAHD,mBAGrCC,EAHqC,KAGzBC,EAHyB,KAsB5C,OAEI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OAElCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAvBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCVlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCGPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCJHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAqBpC,OAfAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAKtB,CAACpB,IAIIqB,EDlBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIJ,UAAU,qBAAqBhB,GAClCoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAIHH,EAAOJ,KAAI,SAAAC,GACP,OAAO,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACLD,UEOzBkB,EAtBM,WAAK,IAAD,EACe1C,mBAAS,CAAC,gBADzB,mBACd2C,EADc,KACF5C,EADE,KAGrB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GACX,OAAO,kBAAC,EAAD,CACKA,SAAWA,EACX2B,IAAK3B,U,MCZzC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.19bca16f.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    //state del input\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    //funcion que captura algun cambio en el input\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    //funcion que se encarga de hacer el submit del form\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        //condicional para que el valor del input sea mayor a 2 caracteres\r\n        if(inputValue.trim().length > 2){\r\n            \r\n            setCategories(cat=>[inputValue,...cat]);\r\n            //al dar enter se cambia el valor del input a vacio\r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <input\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=>{\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category) }&limit=10&api_key=RzKWk4wA51pD8vmMJtQL515A64EcuqFw`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__bounceIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n            \r\n                \r\n                    {\r\n                        images.map(img =>{\r\n                            return <GifGridItem\r\n                                    key={img.id}\r\n                                    {...img}\r\n                                    \r\n                                    />\r\n                        })\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n","import {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category)=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n            \r\n            });\r\n\r\n    },[category]);\r\n    \r\n    \r\n\r\n    return state; //{data:[], loading:true}\r\n}\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n        \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr></hr>\r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(category =>{\r\n                        return <GifGrid\r\n                                    category= {category}\r\n                                    key={category}    \r\n                                />\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}